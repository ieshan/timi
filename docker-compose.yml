services:
  # Unit tests - runs timi_unit_test.go (zero dependencies)
  unit-test:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - timi-network
    working_dir: "/app"
    command: "go test -v"

  # Integration tests - runs timi_mongo_test.go and timi_gorm_test.go (with databases)
  integration-test:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - timi-network
    working_dir: "/app/integration-tests"
    depends_on:
      - mongo
      - postgres
      - mariadb
    command: bash -c "go mod download && go test -v ./..."

  # MongoDB workspace tests - runs bson_helpers_test.go
  mongodb-test:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - timi-network
    working_dir: "/app/mongodb"
    depends_on:
      - mongo
    command: bash -c "go mod download && go test -v ./..."

  # Combined tests - runs all tests across all workspaces
  all-tests:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - timi-network
    working_dir: "/app"
    depends_on:
      - mongo
      - postgres
      - mariadb
    command: >
      bash -c "
      echo '=== Running Unit Tests ===' &&
      go test -v &&
      echo &&
      echo '=== Running Integration Tests ===' &&
      cd integration-tests &&
      go mod download &&
      go test -v ./... &&
      echo &&
      echo '=== Running MongoDB Workspace Tests ===' &&
      cd ../mongodb &&
      go mod download &&
      go test -v ./... &&
      echo &&
      echo '=== All Tests Complete ==='
      "

  # Go workspace commands - for running go commands across all workspaces
  go-workspace:
    image: golang:1.24.5-bookworm
    volumes:
      - "./:/app"
    networks:
      - timi-network
    working_dir: "/app"
    depends_on:
      - mongo
      - postgres
      - mariadb
    # Override command when running
    command: bash

  postgres:
    image: postgres:17.5-alpine3.22
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - timi-network
  mariadb:
    image: mariadb:11.5.2-ubi9
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: password
    networks:
      - timi-network
  mongo:
    image: mongo:8.0.3-noble
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - timi-network
networks:
  timi-network:
    driver: bridge
